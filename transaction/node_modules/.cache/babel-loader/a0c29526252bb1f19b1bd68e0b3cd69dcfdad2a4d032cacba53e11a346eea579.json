{"ast":null,"code":"var _jsxFileName = \"/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport myCat from '../../src/myCat.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myCatCell = {\n  'isEmpty': false,\n  \"isMyCat\": true\n};\nlet initialArrState = [[null, myCatCell, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null]];\nexport default function CustomField() {\n  _s();\n  const [arrState, setArrState] = useState(initialArrState);\n  function createItems(arrState) {\n    const listItems = arrState.map((number, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-item\",\n        id: id,\n        children: number.map((item, itemId) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleCellClick(id, itemId),\n            className: \"cell-item\",\n            id: itemId,\n            children: checkCellAndRender(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    });\n    return listItems;\n  }\n  function checkCellAndRender(item) {\n    if (item) {\n      if (item.isMyCat) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: myCat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      }\n    } else return null;\n  }\n  function handleCellClick(id, itemId) {\n    arrState.forEach((element, row) => {\n      element.find(searchItem) && updateElement(id, itemId, myCatCell);\n    });\n  }\n  function searchItem(element, index, array) {\n    if (element === myCatCell) {\n      console.log(index);\n      // console.log(array)\n      // array[index] = null;\n      // setArrState(array[index])\n      // updateElement(0,0, null)\n      return index;\n    } else return null;\n  }\n  const updateElement = (rowIndex, columnIndex, newValue) => {\n    const updatedMatrix = [...arrState];\n    updatedMatrix[rowIndex] = [...updatedMatrix[rowIndex]];\n    updatedMatrix[rowIndex][columnIndex] = newValue;\n    setArrState(updatedMatrix);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-field\",\n    children: createItems(arrState)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomField, \"Bzh/ozhGvYzqyEBDkLEb+mbXXSc=\");\n_c = CustomField;\nvar _c;\n$RefreshReg$(_c, \"CustomField\");","map":{"version":3,"names":["React","useState","myCat","jsxDEV","_jsxDEV","myCatCell","initialArrState","CustomField","_s","arrState","setArrState","createItems","listItems","map","number","id","className","children","item","itemId","onClick","handleCellClick","checkCellAndRender","fileName","_jsxFileName","lineNumber","columnNumber","isMyCat","src","forEach","element","row","find","searchItem","updateElement","index","array","console","log","rowIndex","columnIndex","newValue","updatedMatrix","_c","$RefreshReg$"],"sources":["/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js"],"sourcesContent":["import React, { useState } from 'react';\nimport myCat from '../../src/myCat.png'\n\nconst myCatCell = { 'isEmpty': false, \"isMyCat\": true, }\n\nlet initialArrState = [\n  [null, myCatCell, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null]\n]\n\nexport default function CustomField() {\n  const [arrState, setArrState] = useState(initialArrState);\n\n  function createItems(arrState) {\n    const listItems = arrState.map((number, id) => {\n      return <div className=\"line-item\" id={id}>\n        {number.map((item, itemId) => {\n          return <div onClick={() => handleCellClick(id, itemId)} className=\"cell-item\" id={itemId}>{checkCellAndRender(item)}</div>\n        })}\n      </div>\n    });\n    return listItems;\n  }\n  function checkCellAndRender(item) {\n    if (item) {\n      if (item.isMyCat) {\n        return <img src={myCat} />;\n      }\n    } else return null;\n  }\n\n  function handleCellClick(id, itemId) {\n    arrState.forEach((element, row) => {\n      element.find(searchItem) && updateElement(id, itemId, myCatCell);\n    })\n  }\n\n  function searchItem(element, index, array) {\n    if (element === myCatCell) {\n      console.log(index)\n      // console.log(array)\n      // array[index] = null;\n      // setArrState(array[index])\n      // updateElement(0,0, null)\n      return index;\n    } else return null;\n  }\n\n  const updateElement = (rowIndex, columnIndex, newValue) => {\n    const updatedMatrix = [...arrState];\n    updatedMatrix[rowIndex] = [...updatedMatrix[rowIndex]];\n    updatedMatrix[rowIndex][columnIndex] = newValue;\n    setArrState(updatedMatrix);\n  };\n\n  return (\n    <div className=\"custom-field\">{createItems(arrState)}</div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}