{"ast":null,"code":"var _jsxFileName = \"/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport myCat from '../../src/myCat.png';\nimport itemImage from '../../src/item.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myCatCell = {\n  'isEmpty': false,\n  \"isMyCat\": true\n};\nconst itemCell = {\n  'isEmpty': false,\n  \"isItem\": true\n};\n\n// let initialArrState = [\n//   [null, myCatCell, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null]\n// ]\n\nlet initialArrState = [[null, myCatCell, itemCell], [null, null, null], [null, null, null], [null, null, null], [null, null, null], [null, null, null]];\nexport default function CustomField() {\n  _s();\n  const [arrState, setArrState] = useState(initialArrState);\n  function createItems(arrState) {\n    const listItems = arrState.map((number, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-item\",\n        id: id,\n        children: number.map((item, itemId) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleCellClick(id, itemId),\n            className: \"cell-item\",\n            id: itemId,\n            children: checkCellAndRender(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    });\n    return listItems;\n  }\n  function checkCellAndRender(item) {\n    if (item) {\n      if (item.isMyCat) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: myCat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this);\n      }\n      if (item.isItem) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: itemImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n      }\n    } else return null;\n  }\n  function handleCellClick(clickRowId, clickCellId) {\n    arrState.forEach((element, rowId) => {\n      searchItem(element, rowId, clickRowId, clickCellId);\n    });\n  }\n  function searchItem(element, rowId, clickRowId, clickCellId) {\n    element.find((item, cellId) => {\n      if (arrState[clickRowId][clickCellId] == item && arrState[clickRowId][clickCellId]) {\n        if (!arrState[clickRowId][clickCellId].isEmpty) {\n          console.log(arrState[clickRowId][clickCellId].isEmpty);\n          return;\n        }\n      }\n      if (item === myCatCell) {\n        updateElement(rowId, cellId, null);\n        updateElement(clickRowId, clickCellId, myCatCell);\n      }\n    });\n    // element.forEach((item, cellId) => {\n\n    //   if (arrState[clickRowId][clickCellId] == item && arrState[clickRowId][clickCellId]) {\n    //     if (!arrState[clickRowId][clickCellId].isEmpty) {\n    //       console.log(\"пустая клетка\")\n    //       return;\n    //     }\n    //   }\n    //   if (item === myCatCell) {\n    //     updateElement(rowId, cellId, null);\n    //     updateElement(clickRowId, clickCellId, myCatCell);\n    //   }\n    // })\n  }\n\n  const updateElement = (rowIndex, columnIndex, newValue) => {\n    const updatedMatrix = [...arrState];\n    updatedMatrix[rowIndex][columnIndex] = newValue;\n    setArrState(updatedMatrix);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-field\",\n    children: createItems(arrState)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomField, \"Bzh/ozhGvYzqyEBDkLEb+mbXXSc=\");\n_c = CustomField;\nvar _c;\n$RefreshReg$(_c, \"CustomField\");","map":{"version":3,"names":["React","useState","myCat","itemImage","jsxDEV","_jsxDEV","myCatCell","itemCell","initialArrState","CustomField","_s","arrState","setArrState","createItems","listItems","map","number","id","className","children","item","itemId","onClick","handleCellClick","checkCellAndRender","fileName","_jsxFileName","lineNumber","columnNumber","isMyCat","src","isItem","clickRowId","clickCellId","forEach","element","rowId","searchItem","find","cellId","isEmpty","console","log","updateElement","rowIndex","columnIndex","newValue","updatedMatrix","_c","$RefreshReg$"],"sources":["/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js"],"sourcesContent":["import React, { useState } from 'react';\nimport myCat from '../../src/myCat.png'\nimport itemImage from '../../src/item.png'\n\nconst myCatCell = { 'isEmpty': false, \"isMyCat\": true }\nconst itemCell = { 'isEmpty': false, \"isItem\": true }\n\n// let initialArrState = [\n//   [null, myCatCell, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null],\n//   [null, null, null, null, null, null, null, null, null, null]\n// ]\n\nlet initialArrState = [\n  [null, myCatCell, itemCell],\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n]\n\nexport default function CustomField() {\n  const [arrState, setArrState] = useState(initialArrState);\n\n  function createItems(arrState) {\n    const listItems = arrState.map((number, id) => {\n      return <div className=\"line-item\" id={id}>\n        {number.map((item, itemId) => {\n          return <div onClick={() => handleCellClick(id, itemId)} className=\"cell-item\" id={itemId}>{checkCellAndRender(item)}</div>\n        })}\n      </div>\n    });\n    return listItems;\n  }\n\n  function checkCellAndRender(item) {\n    if (item) {\n      if (item.isMyCat) {\n        return <img src={myCat} />;\n      }\n      if (item.isItem) {\n        return <img src={itemImage} />;\n      }\n    } else return null;\n  }\n\n  function handleCellClick(clickRowId, clickCellId) {\n    arrState.forEach((element, rowId) => {\n      searchItem(element, rowId, clickRowId, clickCellId);\n    })\n  }\n\n  function searchItem(element, rowId, clickRowId, clickCellId) {\n\n    element.find((item, cellId) => {\n      if (arrState[clickRowId][clickCellId] == item && arrState[clickRowId][clickCellId]) {\n        if (!arrState[clickRowId][clickCellId].isEmpty) {\n          console.log(arrState[clickRowId][clickCellId].isEmpty)\n          return;\n        }\n      }\n      if (item === myCatCell) {\n        updateElement(rowId, cellId, null);\n        updateElement(clickRowId, clickCellId, myCatCell);\n      }\n    })\n    // element.forEach((item, cellId) => {\n\n    //   if (arrState[clickRowId][clickCellId] == item && arrState[clickRowId][clickCellId]) {\n    //     if (!arrState[clickRowId][clickCellId].isEmpty) {\n    //       console.log(\"пустая клетка\")\n    //       return;\n    //     }\n    //   }\n    //   if (item === myCatCell) {\n    //     updateElement(rowId, cellId, null);\n    //     updateElement(clickRowId, clickCellId, myCatCell);\n    //   }\n    // })\n  }\n\n  const updateElement = (rowIndex, columnIndex, newValue) => {\n    const updatedMatrix = [...arrState];\n    updatedMatrix[rowIndex][columnIndex] = newValue;\n    setArrState(updatedMatrix);\n  };\n\n  return (\n    <div className=\"custom-field\">{createItems(arrState)}</div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}