{"ast":null,"code":"var _jsxFileName = \"/home/anduser/Desktop/transaction/transaction/transaction/src/code/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CustomField from './customField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myCatCell = {\n  'isEmpty': false,\n  \"isMyCat\": true\n};\nconst itemCell = {\n  'isEmpty': false,\n  \"isItem\": true\n};\nlet firstMap = [[null, myCatCell, itemCell, itemCell, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, itemCell, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, itemCell, null, null, null, null, null], [null, null, null, itemCell, null, null, null, null, null, null]];\nlet SecondMap = [[null, myCatCell, itemCell], [itemCell, null, itemCell], [null, null, null], [null, null, jumpCell], [null, null, null], [null, null, null]];\nexport default function Map() {\n  _s();\n  console.log(\"map\");\n  const [currentMap, setCurrentMap] = useState(firstMap);\n  function renewMap(newMapValue) {\n    switch (newMapValue) {\n      case 'firstMap':\n        setCurrentMap(firstMap);\n        break;\n      case 'SecondMap':\n        console.log(currentMap);\n        setCurrentMap(SecondMap);\n        console.log(currentMap);\n        break;\n      default:\n        setCurrentMap(firstMap);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CustomField, {\n    currentMap: currentMap,\n    myCatCell: myCatCell,\n    renewMap: renewMap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"0vDW1kZ+L58/jdjwW6KJegoSjxc=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","CustomField","jsxDEV","_jsxDEV","myCatCell","itemCell","firstMap","SecondMap","jumpCell","Map","_s","console","log","currentMap","setCurrentMap","renewMap","newMapValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anduser/Desktop/transaction/transaction/transaction/src/code/map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CustomField from './customField'\n\n\nconst myCatCell = { 'isEmpty': false, \"isMyCat\": true }\nconst itemCell = { 'isEmpty': false, \"isItem\": true }\n\nlet firstMap = [\n    [null, myCatCell, itemCell, itemCell, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, itemCell, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, itemCell, null, null, null, null, null],\n    [null, null, null, itemCell, null, null, null, null, null, null]\n]\n\n\n\nlet SecondMap = [\n    [null, myCatCell, itemCell],\n    [itemCell, null, itemCell],\n    [null, null, null],\n    [null, null, jumpCell],\n    [null, null, null],\n    [null, null, null],\n]\n\n\nexport default function Map() {\n    console.log(\"map\");\n    const [currentMap, setCurrentMap] = useState(firstMap);\n    function renewMap(newMapValue) {\n        switch (newMapValue) {\n            case 'firstMap':\n                setCurrentMap(firstMap);\n                break;\n            case 'SecondMap':\n                console.log(currentMap)\n                setCurrentMap(SecondMap);\n                console.log(currentMap)\n                break;\n            default:\n                setCurrentMap(firstMap);\n        }\n    }\n\n    return (\n        <CustomField currentMap={currentMap} myCatCell={myCatCell} renewMap={renewMap} />\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,SAAS,GAAG;EAAE,SAAS,EAAE,KAAK;EAAE,SAAS,EAAE;AAAK,CAAC;AACvD,MAAMC,QAAQ,GAAG;EAAE,SAAS,EAAE,KAAK;EAAE,QAAQ,EAAE;AAAK,CAAC;AAErD,IAAIC,QAAQ,GAAG,CACX,CAAC,IAAI,EAAEF,SAAS,EAAEC,QAAQ,EAAEA,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACzE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEA,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEA,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEA,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACnE;AAID,IAAIE,SAAS,GAAG,CACZ,CAAC,IAAI,EAAEH,SAAS,EAAEC,QAAQ,CAAC,EAC3B,CAACA,QAAQ,EAAE,IAAI,EAAEA,QAAQ,CAAC,EAC1B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAEG,QAAQ,CAAC,EACtB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACrB;AAGD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1BC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACM,QAAQ,CAAC;EACtD,SAASS,QAAQA,CAACC,WAAW,EAAE;IAC3B,QAAQA,WAAW;MACf,KAAK,UAAU;QACXF,aAAa,CAACR,QAAQ,CAAC;QACvB;MACJ,KAAK,WAAW;QACZK,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;QACvBC,aAAa,CAACP,SAAS,CAAC;QACxBI,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;QACvB;MACJ;QACIC,aAAa,CAACR,QAAQ,CAAC;IAC/B;EACJ;EAEA,oBACIH,OAAA,CAACF,WAAW;IAACY,UAAU,EAAEA,UAAW;IAACT,SAAS,EAAEA,SAAU;IAACW,QAAQ,EAAEA;EAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEzF;AAACV,EAAA,CArBuBD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}