{"ast":null,"code":"var _jsxFileName = \"/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myCatCell = {\n  'isEmpty': false,\n  \"isMyCat\": true\n};\nlet initialArrState = [[null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, myCatCell, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null]];\nexport default function CustomField() {\n  _s();\n  const [arrState, setArrState] = useState(initialArrState);\n  function createItems(arrState) {\n    const listItems = arrState.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"line-item\",\n        children: number.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cell-item\",\n            children: checkCellAndRender(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    });\n    return listItems;\n  }\n  function checkCellAndRender(item) {\n    if (item) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"cat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    } else return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"custom-field\",\n    children: createItems(arrState)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomField, \"Bzh/ozhGvYzqyEBDkLEb+mbXXSc=\");\n_c = CustomField;\nvar _c;\n$RefreshReg$(_c, \"CustomField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","myCatCell","initialArrState","CustomField","_s","arrState","setArrState","createItems","listItems","map","number","class","children","item","checkCellAndRender","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anduser/Desktop/transaction/transaction/transaction/src/code/customField.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nlet myCatCell = { 'isEmpty': false, \"isMyCat\": true, }\n\nlet initialArrState = [\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, myCatCell, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null, null, null]\n]\n\nexport default function CustomField() {\n  const [arrState, setArrState] = useState(initialArrState);\n\n  function createItems(arrState) {\n    const listItems = arrState.map((number) => {\n      return <div class=\"line-item\">\n        {number.map((item) => {\n          return <div class=\"cell-item\">{checkCellAndRender(item)}</div>\n        })}\n      </div>\n    });\n    return listItems;\n  }\n  function checkCellAndRender(item) {\n    if (item) {\n      return <div>cat</div>;\n    } else return null;\n\n  }\n  return (\n    <div class=\"custom-field\">{createItems(arrState)}</div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,IAAIC,SAAS,GAAG;EAAE,SAAS,EAAE,KAAK;EAAE,SAAS,EAAE;AAAM,CAAC;AAEtD,IAAIC,eAAe,GAAG,CACpB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAED,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACjE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC5D,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAC7D;AAED,eAAe,SAASE,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACI,eAAe,CAAC;EAEzD,SAASK,WAAWA,CAACF,QAAQ,EAAE;IAC7B,MAAMG,SAAS,GAAGH,QAAQ,CAACI,GAAG,CAAEC,MAAM,IAAK;MACzC,oBAAOV,OAAA;QAAKW,KAAK,EAAC,WAAW;QAAAC,QAAA,EAC1BF,MAAM,CAACD,GAAG,CAAEI,IAAI,IAAK;UACpB,oBAAOb,OAAA;YAAKW,KAAK,EAAC,WAAW;YAAAC,QAAA,EAAEE,kBAAkB,CAACD,IAAI;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAChE,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IACR,CAAC,CAAC;IACF,OAAOV,SAAS;EAClB;EACA,SAASM,kBAAkBA,CAACD,IAAI,EAAE;IAChC,IAAIA,IAAI,EAAE;MACR,oBAAOb,OAAA;QAAAY,QAAA,EAAK;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACvB,CAAC,MAAM,OAAO,IAAI;EAEpB;EACA,oBACElB,OAAA;IAAKW,KAAK,EAAC,cAAc;IAAAC,QAAA,EAAEL,WAAW,CAACF,QAAQ;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE3D;AAACd,EAAA,CAtBuBD,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}